SCHM0103

HEADER
{
 FREEID 3160
 VARIABLES
 {
  #ARCHITECTURE="Ram"
  #BLOCKTABLE_FILE="#LARC.bde"
  #BLOCKTABLE_INCLUDED="1"
  #ENTITY="Ram"
  #LANGUAGE="VHDL"
  AUTHOR="Wilson Ruggiero"
  COMPANY="LARC-EPUSP"
  CREATIONDATE="15/11/2008"
  PAGECOUNT="2"
  TITLE="No Title"
 }
}

PAGE ""
{
 PAGEHEADER
 {
  PAGESIZE (2200,1700)
  MARGINS (200,200,200,200)
  RECT (0,0,100,200)
  VARIABLES
  {
   #BLOCKTABLE_VISIBLE="1"
  }
 }
 
 BODY
 {
  INSTANCE  15, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #DECLARATION="(BE - 1:0)"
    #DOWNTO="1"
    #LIBRARY="#terminals"
    #REFERENCE="ender(BE - 1:0)"
    #SYMBOL="BusInput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (400,560)
   VERTEXES ( (2,1563) )
  }
  TEXT  16, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (302,480,337,680)
   ALIGN 9
   MARGINS (1,1)
   PARENT 15
   ORIENTATION 5
  }
  INSTANCE  20, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusBidirectional"
    #DECLARATION="(BP - 1:0)"
    #DOWNTO="1"
    #LIBRARY="#terminals"
    #REFERENCE="dado(BP - 1:0)"
    #SYMBOL="BusBidirectional"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1760,680)
   VERTEXES ( (2,2592) )
  }
  TEXT  21, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1833,590,1868,780)
   ALIGN 9
   MARGINS (1,1)
   PARENT 20
   ORIENTATION 8
  }
  INSTANCE  25, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="Clock"
    #SYMBOL="Input"
    #VHDL_TYPE="std_logic"
   }
   COORD (400,720)
   VERTEXES ( (2,1566) )
  }
  TEXT  26, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (265,703,340,738)
   ALIGN 6
   MARGINS (1,1)
   PARENT 25
  }
  INSTANCE  30, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="rw"
    #SYMBOL="Input"
    #VHDL_TYPE="std_logic"
   }
   COORD (400,800)
   VERTEXES ( (2,1569) )
  }
  TEXT  31, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (307,783,340,818)
   ALIGN 6
   MARGINS (1,1)
   PARENT 30
  }
  INSTANCE  35, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Output"
    #LIBRARY="#terminals"
    #REFERENCE="pronto"
    #SYMBOL="Output"
    #VHDL_TYPE="std_logic"
   }
   COORD (1580,820)
   VERTEXES ( (2,1560) )
  }
  TEXT  36, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1642,780,1677,864)
   ALIGN 1
   MARGINS (1,1)
   PARENT 35
   ORIENTATION 5
  }
  GENERIC  40, 0, 0
  {
   LABEL "BitporPalavra"
   TEXT 
"BP : integer := 16;\n"+
""
   RECT (240,260,620,340)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  GENERIC  41, 0, 0
  {
   LABEL "BitDeEndereco"
   TEXT 
"BE : integer := 8;\n"+
""
   RECT (640,260,1020,340)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  GENERIC  42, 0, 0
  {
   LABEL "Tleitura"
   TEXT 
"Tread : time := 5 ns;\n"+
""
   RECT (1040,260,1420,340)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  GENERIC  43, 0, 0
  {
   LABEL "TempoEscrita"
   TEXT 
"Twrite : time := 5 ns;\n"+
""
   RECT (1440,260,1820,340)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  GENERIC  44, 0, 0
  {
   LABEL "TempoSetup"
   TEXT 
"Tsetup : time := 2 ns;\n"+
""
   RECT (240,380,620,460)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  PROCESS  45, 0, 0
  {
   LABEL "Carga_Inicial_e_Ram_Memoria"
   TEXT 
"Carga_Inicial_e_Ram_Memoria :process (Clock, dado, enable, rw) \n"+
"variable endereco: integer range 0 to (2**BE - 1);\n"+
"variable inicio: std_logic := '1';\n"+
"function fill_memory return tipo_memoria is\n"+
"\ttype HexTable is array (character range <>) of integer;\n"+
"\t-- Caracteres HEX válidos: o, 1, 2 , 3, 4, 5, 6, 6, 7, 8, 9, A, B, C, D, E, F  (somente caracteres maiúsculos)\n"+
"\tconstant lookup: HexTable ('0' to 'F') :=\n"+
"\t\t(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15);\n"+
"\tfile infile: text open read_mode is NA; -- Abre o arquivo para leitura\n"+
"\tvariable buff: line; \n"+
"\tvariable addr_s: string ((BE/4 + 1) downto 1); -- Digitos de endereço mais um espaço\n"+
"\tvariable data_s: string ((BP/4 + 1) downto 1); -- ùltimo byte sempre tem um espaço separador\n"+
"\tvariable addr_1, pal_cnt: integer;\n"+
"\tvariable data: std_logic_vector((BP - 1) downto 0);\n"+
"\tvariable Mem: tipo_memoria := ( others  => (others => '0')) ;\n"+
"\tbegin\n"+
"\t\twhile (not endfile(infile)) loop\n"+
"\t\t\treadline(infile,buff); -- Lê um linha do infile e coloca no buff\n"+
"\t\t\tread(buff, addr_s); -- Leia o conteudo de buff até encontrar um espaço e atribui à addr_s, ou seja, leio o endereço\n"+
"\t\t\tread(buff, pal_cnT); -- Leia o número de bytes da próxima linha\n"+
"\t\t\t-- addr_1 := lookup(addr_s(4)) * 4096 + lookup(addr_s(3)) * 256 + lookup(addr_s(2)) * 16 + lookup(addr_s(1));\n"+
"\t\t\taddr_1 := 0;\n"+
"\t\t\tfor i in (BE/4 + 1) downto 2 loop\n"+
"\t\t\t\taddr_1 := addr_1 + lookup(addr_s(i))*16**(i - 2);\n"+
"\t\t\tend loop;\n"+
"\t\t\treadline(infile, buff);\n"+
"\t\t\tfor i in 1 to pal_cnt loop\n"+
"\t\t\t\tread(buff, data_s); -- Leia dois dígitos Hex e o espaço separador\n"+
"\t\t\t\t-- data := lookup(data_s(3)) * 16 + lookup(data_s(2)); -- Converte o valor lido em Hex para inteiro\n"+
"\t\t\t\tdata := (others => '0');\n"+
"\t\t\t\tfor i in (BP/4 + 1) downto 2 loop\n"+
"\t\t\t\t\tdata := data + lookup(data_s(i))*16**(i-2);\n"+
"\t\t\t\tend loop;\n"+
"\t\t\t\tMem(addr_1) := data; -- Converte o conteúdo da palavra para std_logic_vector\n"+
"\t\t\t\taddr_1 := addr_1 + 1;\t-- Endereça a próxima palavra a ser carregada\n"+
"\t\t\tend loop;\n"+
"\t\tend loop;\n"+
"\treturn Mem;\n"+
"end fill_memory;\n"+
" \n"+
"begin\n"+
"if inicio = '1' then\n"+
"\t-- Roda somente uma vez na inicialização\n"+
"\tMram <= fill_memory;\n"+
"\t-- Insere o conteúdo na memória\n"+
"\tinicio := '0';\n"+
"end if;\n"+
"if Clock'event and Clock = '1' and enable = '1' then\n"+
"\tif (ender'last_event < Tsetup) or (dado'last_event < Tsetup) then\n"+
"\t\t\tdado <= (others => 'X');\n"+
"\telse\n"+
"\t\tendereco := to_integer(unsigned(ender));\n"+
"\t\tcase rw is\n"+
"\t\t\twhen '0' => -- Ciclo de Leitura\n"+
"\t\t\t\tdado <= Mram(endereco) after Tread;\n"+
"\t\t\t\tpronto <= '1' after Tread;\t\t\t\t \n"+
"\t\t\twhen '1' => --Ciclo de Escrita\n"+
"\t\t\t\tMram(endereco) <= dado after Twrite;\n"+
"\t\t\t\tpronto <= '1' after Twrite;\n"+
"\t\t\twhen others => -- Ciclo inválido\n"+
"\t\t\t\tNull;\n"+
"\t\tend case;\n"+
"\tend if;\n"+
"end if;\t\n"+
"if Clock'event and Clock = '1' and enable = '0' then\n"+
"--if Clock'event and Clock = '0' then\n"+
"\tpronto <= '0';\n"+
"\tdado <= (others => 'Z') after Tz;\n"+
"end if;\n"+
"end process;\n"+
""
   RECT (660,500,1160,880)
   ALIGN 5
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   CORNER 10
   VTX (  1559, 1562, 1565, 1568, 2591, 2857 )
   VARIABLES
   {
    #DIRECTION_LIST="1562 1565 1568 2857 "
    #UPDATE_SENS_LIST="0"
   }
   LIST (  1565, 2857 )
  }
  NET WIRE  62, 0, 0
  NET WIRE  66, 0, 0
  NET BUS  70, 0, 0
  ARCHITECTUREDECLARATIONS  81, 0, 0
  {
   LABEL "Architecture declarations"
   TEXT 
"type \ttipo_memoria  is array (0 to 2**BE - 1) of std_logic_vector(BP - 1 downto 0);\n"+
"signal Mram: tipo_memoria := ( others  => (others => '0')) ;"
   RECT (240,920,1340,1040)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  NET WIRE  265, 0, 0
  VHDLDESIGNUNITHDR  276, 0, 0
  {
   LABEL "Design Unit Header"
   TEXT 
"library IEEE;\n"+
"use IEEE.std_logic_1164.all;\n"+
"use IEEE.numeric_std.all;\n"+
"use IEEE.std_logic_unsigned.all;\n"+
"use std.textio.all;"
   RECT (1400,940,1920,1200)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  GENERIC  1358, 0, 0
  {
   LABEL "NomeArquivo"
   TEXT 
"NA : string := \"mram.txt\";\n"+
""
   RECT (640,380,1020,460)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  VTX  1559, 0, 0
  {
   COORD (1160,820)
  }
  VTX  1560, 0, 0
  {
   COORD (1580,820)
  }
  WIRE  1561, 0, 0
  {
   NET 265
   VTX 1559, 1560
  }
  VTX  1562, 0, 0
  {
   COORD (660,560)
  }
  VTX  1563, 0, 0
  {
   COORD (400,560)
  }
  BUS  1564, 0, 0
  {
   NET 70
   VTX 1562, 1563
  }
  VTX  1565, 0, 0
  {
   COORD (660,720)
  }
  VTX  1566, 0, 0
  {
   COORD (400,720)
  }
  WIRE  1567, 0, 0
  {
   NET 66
   VTX 1565, 1566
  }
  VTX  1568, 0, 0
  {
   COORD (660,800)
  }
  VTX  1569, 0, 0
  {
   COORD (400,800)
  }
  WIRE  1570, 0, 0
  {
   NET 62
   VTX 1568, 1569
  }
  GENERIC  1665, 0, 0
  {
   LABEL "TempoAltaimpedancia"
   TEXT 
"Tz : time := 2 ns;\n"+
""
   RECT (1040,380,1420,460)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  NET BUS  2575, 0, 0
  VTX  2591, 0, 0
  {
   COORD (1160,680)
  }
  VTX  2592, 0, 0
  {
   COORD (1760,680)
  }
  BUS  2593, 0, 0
  {
   NET 2575
   VTX 2591, 2592
  }
  INSTANCE  2851, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable"
    #SYMBOL="Input"
   }
   COORD (400,840)
   VERTEXES ( (2,2856) )
  }
  TEXT  2852, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (260,823,349,858)
   ALIGN 6
   MARGINS (1,1)
   PARENT 2851
  }
  VTX  2856, 0, 0
  {
   COORD (400,840)
  }
  VTX  2857, 0, 0
  {
   COORD (660,840)
  }
  NET WIRE  2858, 0, 0
  WIRE  2859, 0, 0
  {
   NET 2858
   VTX 2856, 2857
  }
 }
 
}

PAGE ""
{
 PAGEHEADER
 {
  PAGESIZE (2200,1700)
  MARGINS (200,200,200,200)
  RECT (0,0,0,0)
  VARIABLES
  {
   #BLOCKTABLE_PAGE="1"
   #BLOCKTABLE_TEMPL="1"
   #BLOCKTABLE_VISIBLE="0"
   #MODIFIED="1322504101"
   PAGENAME=""
   PAGENUMBER="1"
  }
 }
 
 BODY
 {
  TEXT  3142, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 5,1, (0,0,0)
   TEXT "Data:"
   RECT (1180,1384,1253,1437)
   ALIGN 4
   MARGINS (1,10)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
  }
  TEXT  3143, 0, 0
  {
   PAGEALIGN 10
   TEXT "$CREATIONDATE"
   RECT (1310,1393,1492,1428)
   ALIGN 4
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,128,0,"Arial")
  }
  TEXT  3144, 0, 0
  {
   PAGEALIGN 10
   TEXT "Titulo:"
   RECT (1179,1444,1268,1497)
   ALIGN 4
   MARGINS (1,10)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
  }
  TEXT  3145, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 5,1, (0,0,0)
   TEXT "$TITLE"
   RECT (1310,1453,1430,1488)
   ALIGN 4
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,128,0,"Arial")
  }
  LINE  3146, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1500), (1170,1260) )
   FILL (1,(0,0,0),0)
  }
  LINE  3147, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1380), (2000,1380) )
   FILL (1,(0,0,0),0)
  }
  LINE  3148, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1440), (2000,1440) )
   FILL (1,(0,0,0),0)
  }
  LINE  3149, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1300,1380), (1300,1500) )
  }
  LINE  3150, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1260), (2000,1260) )
   FILL (1,(0,0,0),0)
  }
  LINE  3151, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (2000,1500), (2000,1260) )
   FILL (1,(0,0,0),0)
  }
  LINE  3152, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1500), (2000,1500) )
   FILL (1,(0,0,0),0)
  }
  TEXT  3153, 0, 0
  {
   PAGEALIGN 10
   TEXT "PCS-2307: Organização de Computadores"
   RECT (1420,1300,1986,1335)
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
   MULTILINE
  }
  LINE  3154, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1400,1260), (1400,1380) )
  }
  LINE  3155, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1860,1380), (1860,1440) )
  }
  TEXT  3156, 0, 0
  {
   PAGEALIGN 10
   TEXT "Pagina:"
   RECT (1718,1384,1822,1437)
   ALIGN 4
   MARGINS (1,10)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
  }
  TEXT  3157, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 5,1, (0,0,0)
   TEXT "$PAGENUMBER / $PAGECOUNT"
   RECT (1876,1382,1998,1442)
   ALIGN 4
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,128,0,"Arial")
   UPDATE 0
  }
  LINE  3158, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1700,1380), (1700,1440) )
  }
  LINKBMPPICT  3159, 0, 0
  {
   FILENAME ".\\..\\#LARC.bmp"
   RECT (1180,1280,1380,1360)
  }
 }
 
}


SCHM0103

HEADER
{
 FREEID 764
 VARIABLES
 {
  #ARCHITECTURE="ROM"
  #BLOCKTABLE_FILE="#LARC.bde"
  #BLOCKTABLE_INCLUDED="1"
  #ENTITY="ROM"
  #LANGUAGE="VHDL"
  AUTHOR="Wilson Ruggiero"
  COMPANY="LARC-EPUSP"
  CREATIONDATE="14/11/2008"
  PAGECOUNT="2"
  TITLE="No Title"
 }
}

PAGE ""
{
 PAGEHEADER
 {
  PAGESIZE (2200,1700)
  MARGINS (200,200,200,200)
  RECT (0,0,100,200)
  VARIABLES
  {
   #BLOCKTABLE_VISIBLE="1"
  }
 }
 
 BODY
 {
  INSTANCE  15, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #DECLARATION="(BE - 1:0)"
    #DOWNTO="1"
    #LIBRARY="#terminals"
    #REFERENCE="ender(BE - 1:0)"
    #SYMBOL="BusInput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (560,520)
   VERTEXES ( (2,256) )
  }
  TEXT  16, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (280,503,480,538)
   ALIGN 6
   MARGINS (1,1)
   PARENT 15
  }
  INSTANCE  20, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusOutput"
    #DECLARATION="(BP - 1:0)"
    #DOWNTO="1"
    #LIBRARY="#terminals"
    #REFERENCE="dado(BP - 1:0)"
    #SYMBOL="BusOutput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1420,520)
   ORIENTATION 3
   VERTEXES ( (2,265) )
  }
  TEXT  21, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1480,502,1670,537)
   ALIGN 4
   MARGINS (1,1)
   PARENT 20
   ORIENTATION 3
  }
  VHDLDESIGNUNITHDR  26, 0, 0
  {
   LABEL "Design Unit Header"
   TEXT 
"library IEEE;\n"+
"use IEEE.std_logic_1164.all;\n"+
"use IEEE.numeric_std.all;;\n"+
"use IEEE.std_logic_unsigned.all;\n"+
"use ieee.math_real.all;\n"+
"use std.textio.all;\n"+
""
   RECT (1420,600,1980,940)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  PROCESS  28, 0, 0
  {
   LABEL "Carga_inicial"
   TEXT 
"Carga_inicial :process -- Roda somente uma vez na inicialização\n"+
"function fill_memory return tipo_memoria is\n"+
"\ttype HexTable is array (character range <>) of integer;\n"+
"\t-- Caracteres HEX válidos: o, 1, 2 , 3, 4, 5, 6, 6, 7, 8, 9, A, B, C, D, E, F  (somente caracteres maiúsculos)\n"+
"\tconstant lookup: HexTable ('0' to 'F') :=\n"+
"\t\t(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15);\n"+
"\tfile infile: text open read_mode is NA; -- Abre o arquivo para leitura\n"+
"\tvariable buff: line; \n"+
"\tvariable addr_s: string ((BE/4 + 1) downto 1); -- Digitos de endereço mais um espaço\n"+
"\tvariable data_s: string ((BP/4 + 1) downto 1); -- ùltimo byte sempre tem um espaço separador\n"+
"\tvariable addr_1, pal_cnt: integer;\n"+
"\tvariable data: std_logic_vector((BP - 1) downto 0);\n"+
"\tvariable Mem: tipo_memoria := ( others  => (others => '0')) ;\n"+
"\tbegin\n"+
"\t\twhile (not endfile(infile)) loop\n"+
"\t\t\treadline(infile,buff); -- Lê um linha do infile e coloca no buff\n"+
"\t\t\tread(buff, addr_s); -- Leia o conteudo de buff até encontrar um espaço e atribui à addr_s, ou seja, leio o endereço\n"+
"\t\t\tread(buff, pal_cnT); -- Leia o número de bytes da próxima linha\n"+
"\t\t\t-- addr_1 := lookup(addr_s(4)) * 4096 + lookup(addr_s(3)) * 256 + lookup(addr_s(2)) * 16 + lookup(addr_s(1));\n"+
"\t\t\taddr_1 := 0;\n"+
"\t\t\tfor i in (BE/4 + 1) downto 2 loop\n"+
"\t\t\t\taddr_1 := addr_1 + lookup(addr_s(i))*16**(i - 2);\n"+
"\t\t\tend loop;\n"+
"\t\t\treadline(infile, buff);\n"+
"\t\t\tfor i in 1 to pal_cnt loop\n"+
"\t\t\t\tread(buff, data_s); -- Leia dois dígitos Hex e o espaço separador\n"+
"\t\t\t\t-- data := lookup(data_s(3)) * 16 + lookup(data_s(2)); -- Converte o valor lido em Hex para inteiro\n"+
"\t\t\t\tdata := (others => '0');\n"+
"\t\t\t\treport data_s;\n"+
"\t\t\t\tfor i in (BP/4 + 1) downto 2 loop\n"+
"\t\t\t\t\tdata := data + lookup(data_s(i))*16**(i-2);\n"+
"\t\t\t\tend loop;\n"+
"\t\t\t\tMem(addr_1) := data; -- Converte o conteúdo da palavra para std_logic_vector\n"+
"\t\t\t\taddr_1 := addr_1 + 1;\t-- Endereça a próxima palavra a ser carregada\n"+
"\t\t\tend loop;\n"+
"\t\tend loop;\n"+
"\treturn Mem;\n"+
"end fill_memory;\n"+
"begin\n"+
"\tmrom <= fill_memory;\n"+
"\t-- Insere o conteúdo na memória\n"+
"\twait;\n"+
"end process;"
   RECT (760,600,1180,900)
   ALIGN 5
   MARGINS (20,20)
   FONT (12,0,0,700,0,0,0,"Arial")
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   CORNER 10
   VARIABLES
   {
    #DIRECTION_LIST=""
    #UPDATE_SENS_LIST="0"
   }
  }
  GENERIC  69, 0, 0
  {
   LABEL "Generic_1"
   TEXT 
"BE : integer := 8;\n"+
""
   RECT (260,240,640,360)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  GENERIC  70, 0, 0
  {
   LABEL "Generic_2"
   TEXT 
"BP : integer := 16;\n"+
""
   RECT (1500,260,1880,380)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  GENERIC  71, 0, 0
  {
   LABEL "Generic_3"
   TEXT 
"Tacesso : time := 5 ns;\n"+
""
   RECT (280,640,660,760)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  ARCHITECTUREDECLARATIONS  86, 0, 0
  {
   LABEL "Architecture declarations"
   TEXT 
"type tipo_memoria  is array (0 to 2**BE - 1) of std_logic_vector(BP - 1 downto 0);\n"+
"signal mrom: tipo_memoria := (others => (others => '0'));\n"+
"signal endereco: integer := 0;"
   RECT (280,1020,1380,1140)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  SIGNALASSIGN  227, 0, 0
  {
   LABEL "SignalAssignments_1"
   TEXT "dado <= mrom(to_integer(unsigned(ender))) after Tacesso;"
   RECT (600,460,1380,580)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
   VTX (  257, 264 )
  }
  VTX  256, 0, 0
  {
   COORD (560,520)
  }
  VTX  257, 0, 0
  {
   COORD (600,520)
  }
  NET BUS  258, 0, 0
  BUS  259, 0, 0
  {
   NET 258
   VTX 256, 257
  }
  VTX  264, 0, 0
  {
   COORD (1380,520)
  }
  VTX  265, 0, 0
  {
   COORD (1420,520)
  }
  NET BUS  266, 0, 0
  BUS  267, 0, 0
  {
   NET 266
   VTX 264, 265
  }
  GENERIC  310, 0, 0
  {
   LABEL "Generic_4"
   TEXT 
"NA : string := \"mrom.txt\";\n"+
""
   RECT (760,240,1360,360)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
 }
 
}

PAGE ""
{
 PAGEHEADER
 {
  PAGESIZE (2200,1700)
  MARGINS (200,200,200,200)
  RECT (0,0,0,0)
  VARIABLES
  {
   #BLOCKTABLE_PAGE="1"
   #BLOCKTABLE_TEMPL="1"
   #BLOCKTABLE_VISIBLE="0"
   #MODIFIED="1322504101"
   PAGENAME=""
   PAGENUMBER="1"
  }
 }
 
 BODY
 {
  TEXT  746, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 5,1, (0,0,0)
   TEXT "Data:"
   RECT (1180,1384,1253,1437)
   ALIGN 4
   MARGINS (1,10)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
  }
  TEXT  747, 0, 0
  {
   PAGEALIGN 10
   TEXT "$CREATIONDATE"
   RECT (1310,1393,1492,1428)
   ALIGN 4
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,128,0,"Arial")
  }
  TEXT  748, 0, 0
  {
   PAGEALIGN 10
   TEXT "Titulo:"
   RECT (1179,1444,1268,1497)
   ALIGN 4
   MARGINS (1,10)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
  }
  TEXT  749, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 5,1, (0,0,0)
   TEXT "$TITLE"
   RECT (1310,1453,1430,1488)
   ALIGN 4
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,128,0,"Arial")
  }
  LINE  750, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1500), (1170,1260) )
   FILL (1,(0,0,0),0)
  }
  LINE  751, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1380), (2000,1380) )
   FILL (1,(0,0,0),0)
  }
  LINE  752, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1440), (2000,1440) )
   FILL (1,(0,0,0),0)
  }
  LINE  753, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1300,1380), (1300,1500) )
  }
  LINE  754, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1260), (2000,1260) )
   FILL (1,(0,0,0),0)
  }
  LINE  755, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (2000,1500), (2000,1260) )
   FILL (1,(0,0,0),0)
  }
  LINE  756, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1170,1500), (2000,1500) )
   FILL (1,(0,0,0),0)
  }
  TEXT  757, 0, 0
  {
   PAGEALIGN 10
   TEXT "PCS-2307: Organização de Computadores"
   RECT (1420,1300,1986,1335)
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
   MULTILINE
  }
  LINE  758, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1400,1260), (1400,1380) )
  }
  LINE  759, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1860,1380), (1860,1440) )
  }
  TEXT  760, 0, 0
  {
   PAGEALIGN 10
   TEXT "Pagina:"
   RECT (1718,1384,1822,1437)
   ALIGN 4
   MARGINS (1,10)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,0,0,"Arial")
  }
  TEXT  761, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 5,1, (0,0,0)
   TEXT "$PAGENUMBER / $PAGECOUNT"
   RECT (1876,1382,1998,1442)
   ALIGN 4
   MARGINS (1,1)
   COLOR (0,0,0)
   FONT (12,0,0,700,0,128,0,"Arial")
   UPDATE 0
  }
  LINE  762, 0, 0
  {
   PAGEALIGN 10
   OUTLINE 0,1, (128,128,128)
   POINTS ( (1700,1380), (1700,1440) )
  }
  LINKBMPPICT  763, 0, 0
  {
   FILENAME ".\\..\\#LARC.bmp"
   RECT (1180,1280,1380,1360)
  }
 }
 
}

